1. var (Function-Scoped, Can Be Redeclared)
* Scope: Function-scoped (not block-scoped).
* Hoisting: Variables declared with var are hoisted to the top of their scope but initialized as undefined.
* Redeclaration: Allowed within the same scope.
* Reassignment: Allowed.
2. let (Block-Scoped, Cannot Be Redeclared)
* Scope: Block-scoped ({}).
* Hoisting: Hoisted but not initialized (Accessing before declaration gives an error).
* Redeclaration: Not allowed in the same scope.
* Reassignment: Allowed.
3. const (Block-Scoped, Cannot Be Redeclared or Reassigned)
* Scope: Block-scoped ({}).
* Hoisting: Hoisted but not initialized.
* Redeclaration: Not allowed.
* Reassignment: Not allowed (Value must be assigned at declaration).
* Mutability: While primitive values are immutable, objects and arrays declared with const can be modified.